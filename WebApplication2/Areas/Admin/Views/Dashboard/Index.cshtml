
@{
    ViewData["title"] = "Dashboard";
    
}
<h3 style="margin:15px">Dashboard</h3>
<div style="margin:15px" class="row">
    <div class="col-md-3">
        <p>Thống kê sản phẩm</p>
        @ViewBag.CountProduct
    </div>
    <div class="col-md-3">
        <p>Thống kê đơn hàng</p>
        @ViewBag.CountOrder
    </div>
    <div class="col-md-3">
        <p>Thống kê danh mục</p>
        @ViewBag.CountCategory
    </div>
    <div class="col-md-3">
        <p>Thống kê người dùng</p>
        @ViewBag.CountUser
    </div>
</div>

    <div class="row">
        <div class="col-md-3">
            <h4>Lọc dữ liệu: </h4>
            <select class="filter-select">
                <option value="30">---Lọc dữ liệu---</option>
                <option value="7">7 ngày qua</option>
                <option value="30">Tháng qua</option>
                <option value="90">3 tháng qua</option>
                <option value="365">Năm qua</option>
            </select>
        </div>
    </div>

<div style="margin:15px" class="row">
    <p>Biểu đồ thống kê</p>
    <div id="myfirstchart" style="height:250px;"></div>
</div>
@section Scripts{
    
    <script>
        $(document).ready(function(){
            var ChartMorris=new Morris.Line({
                        element:'myfirstchart',
                        data:[],
                        xkey:'date',
                        
                        ykeys:['sold','quantity','revenue','profit'],
                        labels:['Đơn hàng','Số lượng bán ra','Doanh thu','Lợi nhuận']
                    });
            $.ajax({
                url:"@Url.Action("GetChartData", "Dashboard")",
                type:"POST",
                dataType:"json",
                success: function(data){
                    if(data){
                        ChartMorris.setData(data.map(function(item){
                            return {
                                date: item.date,
                                sold:item.sold,
                                quantity:item.quantity,
                                revenue:item.revenue,
                                profit:item.profit
                            };
                        }));
                    }
                    else{
                        console.warn("No data received for Morris chart update.");
                        ChartMorris.setData([]);
                    }
                    
                },
                error:function(error){
                    console.error("Error fetching data:", error);
                }
            });
            $('.filter-select').on('change',function(){
                var days=$(this).val();
                var endDate=new Date();
                var startDate=new Date(endDate.getTime()-days*24*60*60*1000);
                $.ajax({
                    url:"@Url.Action("GetChartDataBySelect","Dashboard")",
                    type:"POST",
                    data:{
                        startDate:startDate.toISOString().split('T')[0],
                        endDate:endDate.toISOString().split('T')[0]
                    },
                    success:function(data){
                        if(data){
                        ChartMorris.setData(data.map(function(item){
                            return {
                                date: item.date,
                                sold:item.sold,
                                quantity:item.quantity,
                                revenue:item.revenue,
                                profit:item.profit
                            };
                        }));
                        }
                        else{
                            console.warn("No data received for Morris chart update.");
                            ChartMorris.setData([]);
                        }
                    },
                    error:function(error){
                        console.error("Error fetching data:", error);
                    }
                });
            });
        });
    </script>
}


